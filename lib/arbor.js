//
//  arbor.js - version 0.91
//  a graph vizualization toolkit
//
//  Copyright (c) 2015 Samizdat Drafting Co.
//  Physics code derived from springy.js, copyright (c) 2010 Dennis Hotson
// 
//  Permission is hereby granted, free of charge, to any person
//  obtaining a copy of this software and associated documentation
//  files (the "Software"), to deal in the Software without
//  restriction, including without limitation the rights to use,
//  copy, modify, merge, publish, distribute, sublicense, and/or sell
//  copies of the Software, and to permit persons to whom the
//  Software is furnished to do so, subject to the following
//  conditions:
// 
//  The above copyright notice and this permission notice shall be
//  included in all copies or substantial portions of the Software.
// 
//  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
//  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
//  OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
//  NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
//  HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
//  WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
//  FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
//  OTHER DEALINGS IN THE SOFTWARE.
//
(function(){
  /*   hermetic.js */  $={each:function(d,e){if($.isArray(d)){for(var c=0,b=d.length;c<b;c++){e(c,d[c])}}else{for(var a in d){e(a,d[a])}}},eachTwoNodes:function(b,a,c){},map:function(a,c){var b=[];$.each(a,function(f,e){var d=c(e);if(d!==undefined){b.push(d)}});return b},extend:function(c,b){if(typeof b!="object"){return c}for(var a in b){if(b.hasOwnProperty(a)){c[a]=b[a]}}return c},isArray:function(a){if(!a){return false}return(a.constructor.toString().indexOf("Array")!=-1)},inArray:function(c,a){for(var d=0,b=a.length;d<b;d++){if(a[d]===c){return d}}return -1},isEmptyObject:function(a){if(typeof a!=="object"){return false}var b=true;$.each(a,function(c,d){b=false});return b},getJSON:function(a,c){var b=null;if(window.XMLHttpRequest){b=new XMLHttpRequest()}else{if(window.ActiveXObject){b=new ActiveXObject("Microsoft.XMLHTTP")}}b.onreadystatechange=function(){if(b.readyState==4&&b.status==200){c(JSON.parse(b.responseText.toString()))}};b.open("GET",a,true);b.send()}};
  /*     kernel.js */  var Kernel=function(a){var j=window.location.protocol=="file:"&&navigator.userAgent.toLowerCase().indexOf("chrome")>-1;var h=null;var b=null;var e=[];e.last=new Date();var k=null;var c=null;var d=null;var g=null;var f=false;var i={system:a,tween:null,nodes:{},init:function(){if(typeof(Tween)!="undefined"){b=Tween()}else{if(typeof(arbor.Tween)!="undefined"){b=arbor.Tween()}else{b={busy:function(){return false},tick:function(){return true},to:function(){b.to=function(){};return}}}}i.tween=b;var l=a.parameters();h=Physics(l.dt,l.stiffness,l.repulsion,l.friction,i.system._updateGeometry,l.integrator);i.start();return i},graphChanged:function(l){h._update(l);i.start()},_lastPositions:null,_lastFrametime:new Date().valueOf(),_lastBounds:null,_currentRenderer:null,physicsUpdate:function(){h.tick();var m=i.system._updateBounds();if(b&&b.busy()){m=true}var n=i.system.renderer;var l=new Date();var n=i.system.renderer;if(n!==undefined){if(n!==c){n.init(i.system);c=n}n.redraw({timestamp:l})}var p=e.last;e.last=l;e.push(e.last-p);if(e.length>50){e.shift()}var o=h.systemEnergy();if((o.mean+o.max)/2<0.05){if(g===null){g=new Date().valueOf()}if(new Date().valueOf()-g>1000){clearInterval(d);d=null}else{}}else{g=null}},start:function(l){if(d!==null){return}if(f&&!l){return}f=false;g=null;d=setInterval(i.physicsUpdate,i.system.parameters().timeout)},stop:function(){f=true;if(d!==null){clearInterval(d);d=null}}};return i.init()};
  /*      atoms.js */  var Node=function(a){this._id=_nextNodeId++;this.data=a||{};this._mass=(a.mass!==undefined)?a.mass:1;this._fixed=(a.fixed===true)?true:false;this._p=new Point((typeof(a.x)=="number")?a.x:null,(typeof(a.y)=="number")?a.y:null);delete this.data.x;delete this.data.y;delete this.data.mass;delete this.data.fixed};var _nextNodeId=1;var Edge=function(b,c,a){this._id=_nextEdgeId--;this.source=b;this.target=c;this.length=(a.length!==undefined)?a.length:1;this.data=(a!==undefined)?a:{};delete this.data.length};var _nextEdgeId=-1;var Particle=function(a,b){this.p=a;this.m=b;this.v=new Point(0,0);this.f=new Point(0,0)};Particle.prototype.applyForce=function(a){this.f=this.f.add(a.divide(this.m))};var Spring=function(c,b,d,a){this.point1=c;this.point2=b;this.length=d;this.k=a};Spring.prototype.distanceToParticle=function(a){var c=that.point2.p.subtract(that.point1.p).normalize().normal();var b=a.p.subtract(that.point1.p);return Math.abs(b.x*c.x+b.y*c.y)};var Point=function(a,b){if(a&&a.hasOwnProperty("y")){b=a.y;a=a.x}this.x=a;this.y=b};Point.random=function(a){a=(a!==undefined)?a:5;return new Point(2*a*(Math.random()-0.5),2*a*(Math.random()-0.5))};Point.prototype={exploded:function(){return(isNaN(this.x)||isNaN(this.y))},add:function(a){return new Point(this.x+a.x,this.y+a.y)},subtract:function(a){return new Point(this.x-a.x,this.y-a.y)},multiply:function(a){return new Point(this.x*a,this.y*a)},divide:function(a){return new Point(this.x/a,this.y/a)},magnitude:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normal:function(){return new Point(-this.y,this.x)},normalize:function(){return this.divide(this.magnitude())}};
  /*     system.js */  var ParticleSystem=function(f,t,g,h,w,n,u,b){var l=[];var j=null;var m=0;var x=null;var o=0.04;var k=[20,20,20,20];var p=null;var q=null;if(typeof f=="object"){var v=f;g=v.friction;f=v.repulsion;w=v.fps;n=v.dt;t=v.stiffness;h=v.gravity;u=v.precision;b=v.integrator}if(b!="verlet"&&b!="euler"){b="verlet"}g=isNaN(g)?0.5:g;f=isNaN(f)?1000:f;w=isNaN(w)?55:w;t=isNaN(t)?600:t;n=isNaN(n)?0.02:n;u=isNaN(u)?0.6:u;h=(h===true);var s=0;var d={integrator:b,repulsion:f,stiffness:t,friction:g,dt:n,gravity:h,precision:u,timeout:s};var c;var e={renderer:null,tween:null,nodes:{},edges:{},adjacency:{},names:{},kernel:null};var a=[];var r=function(A,z){if(A.length!=z.length){return false}for(var y=0;y<A.length;y++){if(A[y].x!=z[y].x||A[y].y!=z[y].y){return false}}return true};var i={parameters:function(y){if(y!==undefined){if(!isNaN(y.precision)){y.precision=Math.max(0,Math.min(1,y.precision))}$.each(d,function(A,z){if(y[A]!==undefined){d[A]=y[A]}});e.kernel.physicsModified(y)}return d},stop:function(){e.kernel.stop()},addNode:function(A,D){D=D||{};var E=e.names[A];if(E){E.data=D;return E}else{if(A!=undefined){var z=(D.x!=undefined)?D.x:null;var F=(D.y!=undefined)?D.y:null;var C=(D.fixed)?1:0;var B=new Node(D);B.name=A;e.names[A]=B;e.nodes[B._id]=B;l.push({t:"addNode",id:B._id,m:B.mass,x:z,y:F,f:C});i._notify();return B}}},getNode:function(y){if(y._id!==undefined){return y}else{if(typeof y=="string"||typeof y=="number"){return e.names[y]}}},eachNode:function(A,z,B){var y=[];$.each(e.nodes,function(H,G){if(G._p.x==null||G._p.y==null){return}var E=(x!==null)?i.toScreen(G._p):G._p;var D=z.measureText(G.data.label||"").width;var C=Math.floor(E.x),F=Math.floor(E.y);y.push({x:C,y:F})});if(r(a,y)){$.each(e.nodes,function(E,D){if(D._p.x==null||D._p.y==null){return}var C=(x!==null)?i.toScreen(D._p):D._p;B.call(i,D,C);i.stop()})}else{a=[];$.each(e.nodes,function(H,G){if(G._p.x==null||G._p.y==null){return}var E=(x!==null)?i.toScreen(G._p):G._p;var D=z.measureText(G.data.label||"").width;var C=Math.floor(E.x),F=Math.floor(E.y);a.push({x:C,y:F});B.call(i,G,E)})}},addEdge:function(C,D,B){C=i.getNode(C)||i.addNode(C);D=i.getNode(D)||i.addNode(D);B=B||{};var A=new Edge(C,D,B);var E=C._id;var F=D._id;e.adjacency[E]=e.adjacency[E]||{};e.adjacency[E][F]=e.adjacency[E][F]||[];var z=(e.adjacency[E][F].length>0);if(z){$.extend(e.adjacency[E][F].data,A.data);return}else{e.edges[A._id]=A;e.adjacency[E][F].push(A);var y=(A.length!==undefined)?A.length:1;l.push({t:"addSpring",id:A._id,fm:E,to:F,l:y});i._notify()}return A},getEdges:function(z,y){z=i.getNode(z);y=i.getNode(y);if(!z||!y){return[]}if(typeof(e.adjacency[z._id])!=="undefined"&&typeof(e.adjacency[z._id][y._id])!=="undefined"){return e.adjacency[z._id][y._id]}return[]},eachEdge:function(){var y=[];$.each(e.edges,function(A,z){y.push(z)});return y},prune:function(z){var y={dropped:{nodes:[],edges:[]}};if(z===undefined){$.each(e.nodes,function(B,A){y.dropped.nodes.push(A);i.pruneNode(A)})}else{i.eachNode(function(B){var A=z.call(i,B,{from:i.getEdgesFrom(B),to:i.getEdgesTo(B)});if(A){y.dropped.nodes.push(B);i.pruneNode(B)}})}return y},graft:function(z){var y={added:{nodes:[],edges:[]}};if(z.nodes){$.each(z.nodes,function(B,A){var C=i.getNode(B);if(C){C.data=A}else{y.added.nodes.push(i.addNode(B,A))}e.kernel.start()})}if(z.edges){$.each(z.edges,function(C,A){var B=i.getNode(C);if(!B){y.added.nodes.push(i.addNode(C,{}))}$.each(A,function(G,D){var F=i.getNode(G);if(!F){y.added.nodes.push(i.addNode(G,{}))}var E=i.getEdges(C,G);if(E.length>0){E[0].data=D}else{y.added.edges.push(i.addEdge(C,G,D))}})})}return y},merge:function(z){var y={added:{nodes:[],edges:[]},dropped:{nodes:[],edges:[]}};$.each(e.edges,function(D,C){if((z.edges[C.source.name]===undefined||z.edges[C.source.name][C.target.name]===undefined)){i.pruneEdge(C);y.dropped.edges.push(C)}});var B=i.prune(function(D,C){if(z.nodes[D.name]===undefined){y.dropped.nodes.push(D);return true}});var A=i.graft(z);y.added.nodes=y.added.nodes.concat(A.added.nodes);y.added.edges=y.added.edges.concat(A.added.edges);y.dropped.nodes=y.dropped.nodes.concat(B.dropped.nodes);y.dropped.edges=y.dropped.edges.concat(B.dropped.edges);return y},_updateGeometry:function(B){if(B!=undefined){var y=(B.epoch<m);c=B.energy;var C=B.geometry;if(C!==undefined){for(var A=0,z=C.length/3;A<z;A++){var D=C[3*A];if(y&&e.nodes[D]==undefined){continue}e.nodes[D]._p.x=C[3*A+1];e.nodes[D]._p.y=C[3*A+2]}}}},screenSize:function(y,z){x={width:y,height:z}},screenStep:function(y){o=y},toScreen:function(A){if(!p||!x){return}var z=k||[0,0,0,0];var y=p.bottomright.subtract(p.topleft);var C=z[3]+A.subtract(p.topleft).divide(y.x).x*(x.width-(z[1]+z[3]));var B=z[0]+A.subtract(p.topleft).divide(y.y).y*(x.height-(z[0]+z[2]));return arbor.Point(C,B)},fromScreen:function(C){if(!p||!x){return}var B=k||[0,0,0,0];var A=p.bottomright.subtract(p.topleft);var z=(C.x-B[3])/(x.width-(B[1]+B[3]))*A.x+p.topleft.x;var y=(C.y-B[0])/(x.height-(B[0]+B[2]))*A.y+p.topleft.y;return arbor.Point(z,y)},_updateBounds:function(z){if(x===null){return}if(z){q=z}else{q=i.bounds()}var C=new Point(q.bottomright.x,q.bottomright.y);var B=new Point(q.topleft.x,q.topleft.y);var E=C.subtract(B);var y=B.add(E.divide(2));var A=4;var G=new Point(Math.max(E.x,A),Math.max(E.y,A));q.topleft=y.subtract(G.divide(2));q.bottomright=y.add(G.divide(2));if(!p){if($.isEmptyObject(e.nodes)){return false}p=q;return true}var F=1;_newBounds={bottomright:p.bottomright.add(q.bottomright.subtract(p.bottomright).multiply(F)),topleft:p.topleft.add(q.topleft.subtract(p.topleft).multiply(F))};var D=new Point(p.topleft.subtract(_newBounds.topleft).magnitude(),p.bottomright.subtract(_newBounds.bottomright).magnitude());if(D.x*x.width>1||D.y*x.height>1){p=_newBounds;return true}else{return false}},bounds:function(){var z=null;var y=null;$.each(e.nodes,function(C,B){if(!z){z=new Point(B._p);y=new Point(B._p);return}var A=B._p;if(A.x===null||A.y===null){return}if(A.x>z.x){z.x=A.x}if(A.y>z.y){z.y=A.y}if(A.x<y.x){y.x=A.x}if(A.y<y.y){y.y=A.y}});if(z&&y){return{bottomright:z,topleft:y}}else{return{topleft:new Point(-1,-1),bottomright:new Point(1,1)}}},_notify:function(){if(j===null){m++}else{clearTimeout(j)}j=setTimeout(i._synchronize,20)},_synchronize:function(){if(l.length>0){e.kernel.graphChanged(l);l=[];j=null}},nearest:function(y,B,A){var z=[];$.each(e.nodes,function(G,E){var F=i.toScreen(E._p);if(F.x===null||F.y===null){return}var C=y.measureText(E.data.label).width;var D=C/E.data.label.length+0.5*(C/E.data.label.length);if(F.x+C>A){F.x=F.x-C/2}else{if(F.x-C/2<=0){F.x=F.x+C/2}else{F.x=F.x}}if(B.x<F.x+(C/2+0.5*C/2)&&B.x>F.x-(C/2+0.5*C/2)&&B.y<F.y+(D/2+0.3*D/2)&&B.y>F.y-(D/2+0.3*D/2)){z.push(E)}});if(z.length!=0){return z}else{return null}},};e.kernel=Kernel(i);e.tween=e.kernel.tween||null;Node.prototype.__defineGetter__("p",function(){var z=this;var y={};y.__defineGetter__("x",function(){return z._p.x});y.__defineSetter__("x",function(A){e.kernel.particleModified(z._id,{x:A})});y.__defineGetter__("y",function(){return z._p.y});y.__defineSetter__("y",function(A){e.kernel.particleModified(z._id,{y:A})});y.__proto__=Point.prototype;return y});Node.prototype.__defineSetter__("p",function(y){this._p.x=y.x;this._p.y=y.y;e.kernel.particleModified(this._id,{x:y.x,y:y.y})});Node.prototype.__defineGetter__("mass",function(){return this._mass});Node.prototype.__defineSetter__("mass",function(y){this._mass=y;e.kernel.particleModified(this._id,{m:y})});Node.prototype.__defineSetter__("tempMass",function(y){e.kernel.particleModified(this._id,{_m:y})});Node.prototype.__defineGetter__("fixed",function(){return this._fixed});Node.prototype.__defineSetter__("fixed",function(y){this._fixed=y;e.kernel.particleModified(this._id,{f:y?1:0})});return i};
  /* barnes-hut.js */  var BarnesHutTree=function(){var b=[];var a=0;var e=null;var d=0.5;var c={init:function(g,h,f){d=f;a=0;e=c._newBranch();e.origin=g;e.size=h.subtract(g)},insert:function(j){var f=e;var g=[j];while(g.length){var h=g.shift();var m=h._m||h.m;var p=c._whichQuad(h,f);if(f[p]===undefined){f[p]=h;f.mass+=m;if(f.p){f.p=f.p.add(h.p.multiply(m))}else{f.p=h.p.multiply(m)}}else{if("origin" in f[p]){f.mass+=(m);if(f.p){f.p=f.p.add(h.p.multiply(m))}else{f.p=h.p.multiply(m)}f=f[p];g.unshift(h)}else{var l=f.size.divide(2);var n=new Point(f.origin);if(p[0]=="s"){n.y+=l.y}if(p[1]=="e"){n.x+=l.x}var o=f[p];f[p]=c._newBranch();f[p].origin=n;f[p].size=l;f.mass=m;f.p=h.p.multiply(m);f=f[p];if(o.p.x===h.p.x&&o.p.y===h.p.y){var k=l.x*0.08;var i=l.y*0.08;o.p.x=Math.min(n.x+l.x,Math.max(n.x,o.p.x-k/2+Math.random()*k));o.p.y=Math.min(n.y+l.y,Math.max(n.y,o.p.y-i/2+Math.random()*i))}g.push(o);g.unshift(h)}}}},applyForces:function(m,g){var f=[e];while(f.length){node=f.shift();if(node===undefined){continue}if(m===node){continue}if("f" in node){var k=m.p.subtract(node.p);var l=Math.max(1,k.magnitude());var i=((k.magnitude()>0)?k:Point.random(1)).normalize();m.applyForce(i.multiply(g*(node._m||node.m)).divide(l*l))}else{var j=m.p.subtract(node.p.divide(node.mass)).magnitude();var h=Math.sqrt(node.size.x*node.size.y);if(h/j>d){f.push(node.ne);f.push(node.nw);f.push(node.se);f.push(node.sw)}else{var k=m.p.subtract(node.p.divide(node.mass));var l=Math.max(1,k.magnitude());var i=((k.magnitude()>0)?k:Point.random(1)).normalize();m.applyForce(i.multiply(g*(node.mass)).divide(l*l))}}}},_whichQuad:function(i,f){if(i.p.exploded()){return null}var h=i.p.subtract(f.origin);var g=f.size.divide(2);if(h.y<g.y){if(h.x<g.x){return"nw"}else{return"ne"}}else{if(h.x<g.x){return"sw"}else{return"se"}}},_newBranch:function(){if(b[a]){var f=b[a];f.ne=f.nw=f.se=f.sw=undefined;f.mass=0;delete f.p}else{f={origin:null,size:null,nw:undefined,ne:undefined,sw:undefined,se:undefined,mass:0};b[a]=f}a++;return f}};return c};
  /*    physics.js */  var Physics=function(a,m,n,e,h,o){var f=BarnesHutTree();var c={particles:{},springs:{}};var l={particles:{}};var p=[];var k=[];var d=0;var b={sum:0,max:0,mean:0};var g={topleft:new Point(-1,-1),bottomright:new Point(1,1)};var j=1000;var i={integrator:["verlet","euler"].indexOf(o)>=0?o:"verlet",stiffness:(m!==undefined)?m:1000,repulsion:(n!==undefined)?n:600,friction:(e!==undefined)?e:0.3,gravity:false,dt:(a!==undefined)?a:0.02,theta:0.4,init:function(){return i},modifyPhysics:function(q){$.each(["stiffness","repulsion","friction","gravity","dt","precision","integrator"],function(s,t){if(q[t]!==undefined){if(t=="precision"){i.theta=1-q[t];return}i[t]=q[t];if(t=="stiffness"){var r=q[t];$.each(c.springs,function(v,u){u.k=r})}}})},addNode:function(v){var u=v.id;var r=v.m;var q=g.bottomright.x-g.topleft.x;var t=g.bottomright.y-g.topleft.y;var s=new Point((v.x!=null)?v.x:g.topleft.x+q*Math.random(),(v.y!=null)?v.y:g.topleft.y+t*Math.random());c.particles[u]=new Particle(s,r);c.particles[u].connections=0;c.particles[u].fixed=(v.f===1);l.particles[u]=c.particles[u];p.push(c.particles[u])},modifyNode:function(s,q){if(s in c.particles){var r=c.particles[s];if("x" in q){r.p.x=q.x}if("y" in q){r.p.y=q.y}if("m" in q){r.m=q.m}if("f" in q){r.fixed=(q.f===1)}if("_m" in q){if(r._m===undefined){r._m=r.m}r.m=q._m}}},addSpring:function(u){var t=u.id;var q=u.l;var s=c.particles[u.fm];var r=c.particles[u.to];if(s!==undefined&&r!==undefined){c.springs[t]=new Spring(s,r,q,i.stiffness);k.push(c.springs[t]);s.connections++;r.connections++;delete l.particles[u.fm];delete l.particles[u.to]}},dropSpring:function(t){var s=t.id;var r=c.springs[s];r.point1.connections--;r.point2.connections--;var q=$.inArray(r,k);if(q>-1){k.splice(q,1)}delete c.springs[s]},_update:function(q){d++;$.each(q,function(r,s){if(s.t in i){i[s.t](s)}});return d},tick:function(){i.tendParticles();if(i.integrator=="euler"){i.updateForces();i.updateVelocity(i.dt);i.updatePosition(i.dt)}else{i.updateForces();i.cacheForces();i.updatePosition(i.dt);i.updateForces();i.updateVelocity(i.dt)}i.tock()},tock:function(){var q=[];$.each(c.particles,function(s,r){q.push(s);q.push(r.p.x);q.push(r.p.y)});if(h){h({geometry:q,epoch:d,energy:b,bounds:g})}},tendParticles:function(){$.each(c.particles,function(r,q){if(q._m!==undefined){if(Math.abs(q.m-q._m)<1){q.m=q._m;delete q._m}else{q.m*=0.98}}q.v.x=q.v.y=0})},updateForces:function(){if(i.repulsion>0){if(i.theta>0){i.applyBarnesHutRepulsion()}else{i.applyBruteForceRepulsion()}}if(i.stiffness>0){i.applySprings()}i.applyCenterDrift();if(i.gravity){i.applyCenterGravity()}},cacheForces:function(){$.each(c.particles,function(r,q){q._F=q.f})},applyBruteForceRepulsion:function(){$.each(c.particles,function(r,q){$.each(c.particles,function(t,s){if(q!==s){var v=q.p.subtract(s.p);var w=Math.max(1,v.magnitude());var u=((v.magnitude()>0)?v:Point.random(1)).normalize();q.applyForce(u.multiply(i.repulsion*(s._m||s.m)*0.5).divide(w*w*0.5));s.applyForce(u.multiply(i.repulsion*(q._m||q.m)*0.5).divide(w*w*-0.5))}})})},applyBarnesHutRepulsion:function(){if(!g.topleft||!g.bottomright){return}var r=new Point(g.bottomright);var q=new Point(g.topleft);f.init(q,r,i.theta);$.each(c.particles,function(t,s){f.insert(s)});$.each(c.particles,function(t,s){f.applyForces(s,i.repulsion)})},applySprings:function(){$.each(c.springs,function(u,q){var t=q.point2.p.subtract(q.point1.p);var r=q.length-t.magnitude();var s=((t.magnitude()>0)?t:Point.random(1)).normalize();q.point1.applyForce(s.multiply(q.k*r*-0.5));q.point2.applyForce(s.multiply(q.k*r*0.5))})},applyCenterDrift:function(){var r=0;var s=new Point(0,0);$.each(c.particles,function(u,t){s.add(t.p);r++});if(r==0){return}var q=s.divide(-r);$.each(c.particles,function(u,t){t.applyForce(q)})},applyCenterGravity:function(){$.each(c.particles,function(s,q){var r=q.p.multiply(-1);q.applyForce(r.multiply(i.repulsion/100))})},updateVelocity:function(r){var s=0,q=0,t=0;$.each(c.particles,function(x,u){if(u.fixed){u.v=new Point(0,0);u.f=new Point(0,0);return}if(i.integrator=="euler"){u.v=u.v.add(u.f.multiply(r)).multiply(1-i.friction)}else{u.v=u.v.add(u.f.add(u._F.divide(u._m)).multiply(r*0.5)).multiply(1-i.friction)}u.f.x=u.f.y=0;var v=u.v.magnitude();if(v>j){u.v=u.v.divide(v*v)}var v=u.v.magnitude();var w=v*v;s+=w;q=Math.max(w,q);t++});b={sum:s,max:q,mean:s/t,n:t}},updatePosition:function(q){var s=null;var r=null;$.each(c.particles,function(v,t){if(i.integrator=="euler"){t.p=t.p.add(t.v.multiply(q))}else{var u=t.f.multiply(0.5*q*q).divide(t.m);t.p=t.p.add(t.v.multiply(q)).add(u)}if(!s){s=new Point(t.p.x,t.p.y);r=new Point(t.p.x,t.p.y);return}var w=t.p;if(w.x===null||w.y===null){return}if(w.x>s.x){s.x=w.x}if(w.y>s.y){s.y=w.y}if(w.x<r.x){r.x=w.x}if(w.y<r.y){r.y=w.y}});g={topleft:r||new Point(-1,-1),bottomright:s||new Point(1,1)}},systemEnergy:function(q){return b}};return i.init()};var _nearParticle=function(b,c){var c=c||0;var a=b.x;var f=b.y;var e=c*2;return new Point(a-c+Math.random()*e,f-c+Math.random()*e)};
  arbor = (typeof(arbor)!=='undefined') ? arbor : {}
  $.extend(arbor, {
    // object constructors (don't use ‘new’, just call them)
    ParticleSystem:ParticleSystem,
    Point:function(x, y){ return new Point(x, y) }
  })
})()